<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="dataBaseStudentsDataSet15" targetNamespace="http://tempuri.org/dataBaseStudentsDataSet15.xsd" xmlns:mstns="http://tempuri.org/dataBaseStudentsDataSet15.xsd" xmlns="http://tempuri.org/dataBaseStudentsDataSet15.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="dataBaseStudentsConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="dataBaseStudentsConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.TemaProiectPOO.Properties.Settings.GlobalReference.Default.dataBaseStudentsConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TableNotesTableAdapter" GeneratorDataComponentClassName="TableNotesTableAdapter" Name="TableNotes" UserDataComponentName="TableNotesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dataBaseStudentsConnectionString (Settings)" DbObjectName="dataBaseStudents.dbo.TableNotes" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TableNotes] WHERE (([ID] = @Original_ID) AND ([cod_disciplina] = @Original_cod_disciplina) AND ([nr_matricol] = @Original_nr_matricol) AND ([nota] = @Original_nota))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_cod_disciplina" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cod_disciplina" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_nr_matricol" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nr_matricol" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_nota" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nota" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TableNotes] ([cod_disciplina], [nr_matricol], [nota]) VALUES (@cod_disciplina, @nr_matricol, @nota);
SELECT ID, cod_disciplina, nr_matricol, nota FROM TableNotes WHERE (ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@cod_disciplina" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cod_disciplina" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@nr_matricol" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nr_matricol" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@nota" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nota" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, cod_disciplina, nr_matricol, nota FROM dbo.TableNotes</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TableNotes] SET [cod_disciplina] = @cod_disciplina, [nr_matricol] = @nr_matricol, [nota] = @nota WHERE (([ID] = @Original_ID) AND ([cod_disciplina] = @Original_cod_disciplina) AND ([nr_matricol] = @Original_nr_matricol) AND ([nota] = @Original_nota));
SELECT ID, cod_disciplina, nr_matricol, nota FROM TableNotes WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@cod_disciplina" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cod_disciplina" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@nr_matricol" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nr_matricol" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@nota" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nota" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_cod_disciplina" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="cod_disciplina" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_nr_matricol" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nr_matricol" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_nota" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="nota" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="dataBaseStudents.dbo.TableNotes" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="cod_disciplina" DataSetColumn="cod_disciplina" />
              <Mapping SourceColumn="nr_matricol" DataSetColumn="nr_matricol" />
              <Mapping SourceColumn="nota" DataSetColumn="nota" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="dataBaseStudentsDataSet15" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="dataBaseStudentsDataSet15" msprop:Generator_UserDSName="dataBaseStudentsDataSet15">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="TableNotes" msprop:Generator_TableClassName="TableNotesDataTable" msprop:Generator_TableVarName="tableTableNotes" msprop:Generator_TablePropName="TableNotes" msprop:Generator_RowDeletingName="TableNotesRowDeleting" msprop:Generator_RowChangingName="TableNotesRowChanging" msprop:Generator_RowEvHandlerName="TableNotesRowChangeEventHandler" msprop:Generator_RowDeletedName="TableNotesRowDeleted" msprop:Generator_UserTableName="TableNotes" msprop:Generator_RowChangedName="TableNotesRowChanged" msprop:Generator_RowEvArgName="TableNotesRowChangeEvent" msprop:Generator_RowClassName="TableNotesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:long" />
              <xs:element name="cod_disciplina" msprop:Generator_ColumnVarNameInTable="columncod_disciplina" msprop:Generator_ColumnPropNameInRow="cod_disciplina" msprop:Generator_ColumnPropNameInTable="cod_disciplinaColumn" msprop:Generator_UserColumnName="cod_disciplina">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="nr_matricol" msprop:Generator_ColumnVarNameInTable="columnnr_matricol" msprop:Generator_ColumnPropNameInRow="nr_matricol" msprop:Generator_ColumnPropNameInTable="nr_matricolColumn" msprop:Generator_UserColumnName="nr_matricol" type="xs:int" />
              <xs:element name="nota" msprop:Generator_ColumnVarNameInTable="columnnota" msprop:Generator_ColumnPropNameInRow="nota" msprop:Generator_ColumnPropNameInTable="notaColumn" msprop:Generator_UserColumnName="nota" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TableNotes" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
  </xs:element>
</xs:schema>